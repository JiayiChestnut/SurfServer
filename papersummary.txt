# Your paper summary goes here:

PID: A12345678

Lorem ipsum dolor sit amet, consectetur adipiscing elit...

# If in a group of two, put the second paper summary here:

PID: A12345678

Lorem ipsum dolor sit amet, consectetur adipiscing elit...

Summary:
This article is talking about implementing a Remote Procedure Calls System to provide communication across a network between programs.
First aim of the RPC project is to make distributed computation easy, second one is to support authorsâ€™ purpose, like making communication
highly efficient, final aim is to make it secure. And the author design to make the remote procedure as close as possible to local procedure calls.

Its basic RPC structure is based on stubs, containing five pieces :user, user-stub, RPC communications package, server, server-stub. Also in the article,
author describes the program module, caller(import), callee(export), binding and how they utilized distributed datasets Grapevine to achieve a reliable RPC system.

The design of utilizing a distributed database with central master node is a good idea for nowadays distributed system. It separate the callers and callees,
this means callers is no need to know all about the callees, instead, they just ask the RPCRuntime and let the central master node to take care of the
remote callee searching, binding, and crash handling. This mechanism makes it easy to scale in both ways, we can have multiple clients asking services
as well as adding new servers to provide remote procedures.

Another advantage the system has it too make its own choice of package-level transportation strategy. Different from bulk-data transfer, RPC should
minimizing the elapsed real-time between the call and getting its results so they design a concise-overhead, ack-verification, duplication aware
package-transmission schema. This is also good for distributed system since it provide a efficient communication between server and central nodes,
this makes the system react fast.
